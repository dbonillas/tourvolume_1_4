<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TvClub', 'doctrine');

/**
 * BaseTvClub
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $slug
 * @property integer $city_id
 * @property string $city
 * @property string $state_abv
 * @property string $street
 * @property string $postal_code
 * @property string $phone
 * @property string $fax
 * @property string $website
 * @property string $email
 * @property integer $capacity
 * @property integer $counter
 * @property float $latitude
 * @property float $longitude
 * @property string $ticket
 * @property string $comments
 * @property integer $square_ft
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $TvConcertsShared
 * @property Doctrine_Collection $TvConcerts
 * @property Doctrine_Collection $TvConcertsHistory
 * @property Doctrine_Collection $TvPromoter
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getSlug()              Returns the current record's "slug" value
 * @method integer             getCityId()            Returns the current record's "city_id" value
 * @method string              getCity()              Returns the current record's "city" value
 * @method string              getStateAbv()          Returns the current record's "state_abv" value
 * @method string              getStreet()            Returns the current record's "street" value
 * @method string              getPostalCode()        Returns the current record's "postal_code" value
 * @method string              getPhone()             Returns the current record's "phone" value
 * @method string              getFax()               Returns the current record's "fax" value
 * @method string              getWebsite()           Returns the current record's "website" value
 * @method string              getEmail()             Returns the current record's "email" value
 * @method integer             getCapacity()          Returns the current record's "capacity" value
 * @method integer             getCounter()           Returns the current record's "counter" value
 * @method float               getLatitude()          Returns the current record's "latitude" value
 * @method float               getLongitude()         Returns the current record's "longitude" value
 * @method string              getTicket()            Returns the current record's "ticket" value
 * @method string              getComments()          Returns the current record's "comments" value
 * @method integer             getSquareFt()          Returns the current record's "square_ft" value
 * @method timestamp           getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()         Returns the current record's "updated_at" value
 * @method Doctrine_Collection getTvConcertsShared()  Returns the current record's "TvConcertsShared" collection
 * @method Doctrine_Collection getTvConcerts()        Returns the current record's "TvConcerts" collection
 * @method Doctrine_Collection getTvConcertsHistory() Returns the current record's "TvConcertsHistory" collection
 * @method Doctrine_Collection getTvPromoter()        Returns the current record's "TvPromoter" collection
 * @method TvClub              setId()                Sets the current record's "id" value
 * @method TvClub              setName()              Sets the current record's "name" value
 * @method TvClub              setSlug()              Sets the current record's "slug" value
 * @method TvClub              setCityId()            Sets the current record's "city_id" value
 * @method TvClub              setCity()              Sets the current record's "city" value
 * @method TvClub              setStateAbv()          Sets the current record's "state_abv" value
 * @method TvClub              setStreet()            Sets the current record's "street" value
 * @method TvClub              setPostalCode()        Sets the current record's "postal_code" value
 * @method TvClub              setPhone()             Sets the current record's "phone" value
 * @method TvClub              setFax()               Sets the current record's "fax" value
 * @method TvClub              setWebsite()           Sets the current record's "website" value
 * @method TvClub              setEmail()             Sets the current record's "email" value
 * @method TvClub              setCapacity()          Sets the current record's "capacity" value
 * @method TvClub              setCounter()           Sets the current record's "counter" value
 * @method TvClub              setLatitude()          Sets the current record's "latitude" value
 * @method TvClub              setLongitude()         Sets the current record's "longitude" value
 * @method TvClub              setTicket()            Sets the current record's "ticket" value
 * @method TvClub              setComments()          Sets the current record's "comments" value
 * @method TvClub              setSquareFt()          Sets the current record's "square_ft" value
 * @method TvClub              setCreatedAt()         Sets the current record's "created_at" value
 * @method TvClub              setUpdatedAt()         Sets the current record's "updated_at" value
 * @method TvClub              setTvConcertsShared()  Sets the current record's "TvConcertsShared" collection
 * @method TvClub              setTvConcerts()        Sets the current record's "TvConcerts" collection
 * @method TvClub              setTvConcertsHistory() Sets the current record's "TvConcertsHistory" collection
 * @method TvClub              setTvPromoter()        Sets the current record's "TvPromoter" collection
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTvClub extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tv_club');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('city_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('state_abv', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('street', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('postal_code', 'string', 11, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 11,
             ));
        $this->hasColumn('phone', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('fax', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('website', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('capacity', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('counter', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('latitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('longitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('ticket', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('comments', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('square_ft', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TvConcertsShared', array(
             'local' => 'id',
             'foreign' => 'club_id'));

        $this->hasMany('TvConcerts', array(
             'local' => 'id',
             'foreign' => 'club_id'));

        $this->hasMany('TvConcertsHistory', array(
             'local' => 'id',
             'foreign' => 'club_id'));

        $this->hasMany('TvPromoter', array(
             'local' => 'id',
             'foreign' => 'club_id'));
    }
}