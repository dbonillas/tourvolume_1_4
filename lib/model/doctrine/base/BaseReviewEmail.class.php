<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ReviewEmail', 'doctrine');

/**
 * BaseReviewEmail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $user
 * @property string $email
 * @property string $password
 * 
 * @method integer     getId()       Returns the current record's "id" value
 * @method string      getUser()     Returns the current record's "user" value
 * @method string      getEmail()    Returns the current record's "email" value
 * @method string      getPassword() Returns the current record's "password" value
 * @method ReviewEmail setId()       Sets the current record's "id" value
 * @method ReviewEmail setUser()     Sets the current record's "user" value
 * @method ReviewEmail setEmail()    Sets the current record's "email" value
 * @method ReviewEmail setPassword() Sets the current record's "password" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReviewEmail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reviewEmail');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('password', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}