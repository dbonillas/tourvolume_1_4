<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Newsfeeds', 'doctrine');

/**
 * BaseNewsfeeds
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $feed
 * @property string $type
 * @property integer $typeid
 * 
 * @method integer   getId()     Returns the current record's "id" value
 * @method string    getFeed()   Returns the current record's "feed" value
 * @method string    getType()   Returns the current record's "type" value
 * @method integer   getTypeid() Returns the current record's "typeid" value
 * @method Newsfeeds setId()     Sets the current record's "id" value
 * @method Newsfeeds setFeed()   Sets the current record's "feed" value
 * @method Newsfeeds setType()   Sets the current record's "type" value
 * @method Newsfeeds setTypeid() Sets the current record's "typeid" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNewsfeeds extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('newsfeeds');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('feed', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('type', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('typeid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}