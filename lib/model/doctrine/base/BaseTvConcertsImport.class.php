<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TvConcertsImport', 'doctrine');

/**
 * BaseTvConcertsImport
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $artist_id
 * @property date $date
 * @property string $artist_name
 * @property string $artist_slug
 * @property integer $city_id
 * @property string $city
 * @property string $state
 * @property string $state_abv
 * @property string $club_name
 * @property string $club_slug
 * @property integer $club_id
 * @property integer $headliner
 * @property integer $ticket_id
 * @property string $ticket_map
 * @property string $ticket_link
 * @property string $time
 * @property integer $event_type
 * @property integer $provided_by
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * 
 * @method integer          getId()          Returns the current record's "id" value
 * @method integer          getArtistId()    Returns the current record's "artist_id" value
 * @method date             getDate()        Returns the current record's "date" value
 * @method string           getArtistName()  Returns the current record's "artist_name" value
 * @method string           getArtistSlug()  Returns the current record's "artist_slug" value
 * @method integer          getCityId()      Returns the current record's "city_id" value
 * @method string           getCity()        Returns the current record's "city" value
 * @method string           getState()       Returns the current record's "state" value
 * @method string           getStateAbv()    Returns the current record's "state_abv" value
 * @method string           getClubName()    Returns the current record's "club_name" value
 * @method string           getClubSlug()    Returns the current record's "club_slug" value
 * @method integer          getClubId()      Returns the current record's "club_id" value
 * @method integer          getHeadliner()   Returns the current record's "headliner" value
 * @method integer          getTicketId()    Returns the current record's "ticket_id" value
 * @method string           getTicketMap()   Returns the current record's "ticket_map" value
 * @method string           getTicketLink()  Returns the current record's "ticket_link" value
 * @method string           getTime()        Returns the current record's "time" value
 * @method integer          getEventType()   Returns the current record's "event_type" value
 * @method integer          getProvidedBy()  Returns the current record's "provided_by" value
 * @method timestamp        getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp        getUpdatedAt()   Returns the current record's "updated_at" value
 * @method TvConcertsImport setId()          Sets the current record's "id" value
 * @method TvConcertsImport setArtistId()    Sets the current record's "artist_id" value
 * @method TvConcertsImport setDate()        Sets the current record's "date" value
 * @method TvConcertsImport setArtistName()  Sets the current record's "artist_name" value
 * @method TvConcertsImport setArtistSlug()  Sets the current record's "artist_slug" value
 * @method TvConcertsImport setCityId()      Sets the current record's "city_id" value
 * @method TvConcertsImport setCity()        Sets the current record's "city" value
 * @method TvConcertsImport setState()       Sets the current record's "state" value
 * @method TvConcertsImport setStateAbv()    Sets the current record's "state_abv" value
 * @method TvConcertsImport setClubName()    Sets the current record's "club_name" value
 * @method TvConcertsImport setClubSlug()    Sets the current record's "club_slug" value
 * @method TvConcertsImport setClubId()      Sets the current record's "club_id" value
 * @method TvConcertsImport setHeadliner()   Sets the current record's "headliner" value
 * @method TvConcertsImport setTicketId()    Sets the current record's "ticket_id" value
 * @method TvConcertsImport setTicketMap()   Sets the current record's "ticket_map" value
 * @method TvConcertsImport setTicketLink()  Sets the current record's "ticket_link" value
 * @method TvConcertsImport setTime()        Sets the current record's "time" value
 * @method TvConcertsImport setEventType()   Sets the current record's "event_type" value
 * @method TvConcertsImport setProvidedBy()  Sets the current record's "provided_by" value
 * @method TvConcertsImport setCreatedAt()   Sets the current record's "created_at" value
 * @method TvConcertsImport setUpdatedAt()   Sets the current record's "updated_at" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTvConcertsImport extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tv_concerts_import');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('artist_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '4',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('artist_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('artist_slug', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('city_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('city', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('state', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('state_abv', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('club_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('club_slug', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('club_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '4',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('headliner', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ticket_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('ticket_map', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('ticket_link', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('time', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('event_type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('provided_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}