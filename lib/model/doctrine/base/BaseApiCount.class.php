<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ApiCount', 'doctrine');

/**
 * BaseApiCount
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $api_id
 * @property integer $api_count
 * @property ApiUser $ApiUser
 * 
 * @method integer  getId()        Returns the current record's "id" value
 * @method integer  getApiId()     Returns the current record's "api_id" value
 * @method integer  getApiCount()  Returns the current record's "api_count" value
 * @method ApiUser  getApiUser()   Returns the current record's "ApiUser" value
 * @method ApiCount setId()        Sets the current record's "id" value
 * @method ApiCount setApiId()     Sets the current record's "api_id" value
 * @method ApiCount setApiCount()  Sets the current record's "api_count" value
 * @method ApiCount setApiUser()   Sets the current record's "ApiUser" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseApiCount extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('api_count');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('api_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('api_count', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ApiUser', array(
             'local' => 'api_id',
             'foreign' => 'api_id'));
    }
}