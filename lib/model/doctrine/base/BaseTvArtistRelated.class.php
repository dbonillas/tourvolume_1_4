<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TvArtistRelated', 'doctrine');

/**
 * BaseTvArtistRelated
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $artist_id
 * @property string $name
 * @property string $related_name
 * @property string $related_img
 * @property timestamp $created_at
 * @property TvArtist $TvArtist
 * 
 * @method integer         getId()           Returns the current record's "id" value
 * @method integer         getArtistId()     Returns the current record's "artist_id" value
 * @method string          getName()         Returns the current record's "name" value
 * @method string          getRelatedName()  Returns the current record's "related_name" value
 * @method string          getRelatedImg()   Returns the current record's "related_img" value
 * @method timestamp       getCreatedAt()    Returns the current record's "created_at" value
 * @method TvArtist        getTvArtist()     Returns the current record's "TvArtist" value
 * @method TvArtistRelated setId()           Sets the current record's "id" value
 * @method TvArtistRelated setArtistId()     Sets the current record's "artist_id" value
 * @method TvArtistRelated setName()         Sets the current record's "name" value
 * @method TvArtistRelated setRelatedName()  Sets the current record's "related_name" value
 * @method TvArtistRelated setRelatedImg()   Sets the current record's "related_img" value
 * @method TvArtistRelated setCreatedAt()    Sets the current record's "created_at" value
 * @method TvArtistRelated setTvArtist()     Sets the current record's "TvArtist" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTvArtistRelated extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tv_artist_related');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('artist_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '4',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('related_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('related_img', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '/images/noimage.gif',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TvArtist', array(
             'local' => 'artist_id',
             'foreign' => 'id'));
    }
}