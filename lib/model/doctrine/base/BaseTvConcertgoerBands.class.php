<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TvConcertgoerBands', 'doctrine');

/**
 * BaseTvConcertgoerBands
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $userid
 * @property string $username
 * @property string $useremail
 * @property string $artist_name
 * @property string $artist_slug
 * @property integer $artist_id
 * @property timestamp $dateadded
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property TvConcertgoer $TvConcertgoer
 * @property TvArtistImgs $TvArtistImgs
 * @property Doctrine_Collection $TvConcerts
 * @property Doctrine_Collection $TvConcertsHistory
 * @property Doctrine_Collection $TvConcertsShared
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getUserid()            Returns the current record's "userid" value
 * @method string              getUsername()          Returns the current record's "username" value
 * @method string              getUseremail()         Returns the current record's "useremail" value
 * @method string              getArtistName()        Returns the current record's "artist_name" value
 * @method string              getArtistSlug()        Returns the current record's "artist_slug" value
 * @method integer             getArtistId()          Returns the current record's "artist_id" value
 * @method timestamp           getDateadded()         Returns the current record's "dateadded" value
 * @method timestamp           getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()         Returns the current record's "updated_at" value
 * @method TvConcertgoer       getTvConcertgoer()     Returns the current record's "TvConcertgoer" value
 * @method TvArtistImgs        getTvArtistImgs()      Returns the current record's "TvArtistImgs" value
 * @method Doctrine_Collection getTvConcerts()        Returns the current record's "TvConcerts" collection
 * @method Doctrine_Collection getTvConcertsHistory() Returns the current record's "TvConcertsHistory" collection
 * @method Doctrine_Collection getTvConcertsShared()  Returns the current record's "TvConcertsShared" collection
 * @method TvConcertgoerBands  setId()                Sets the current record's "id" value
 * @method TvConcertgoerBands  setUserid()            Sets the current record's "userid" value
 * @method TvConcertgoerBands  setUsername()          Sets the current record's "username" value
 * @method TvConcertgoerBands  setUseremail()         Sets the current record's "useremail" value
 * @method TvConcertgoerBands  setArtistName()        Sets the current record's "artist_name" value
 * @method TvConcertgoerBands  setArtistSlug()        Sets the current record's "artist_slug" value
 * @method TvConcertgoerBands  setArtistId()          Sets the current record's "artist_id" value
 * @method TvConcertgoerBands  setDateadded()         Sets the current record's "dateadded" value
 * @method TvConcertgoerBands  setCreatedAt()         Sets the current record's "created_at" value
 * @method TvConcertgoerBands  setUpdatedAt()         Sets the current record's "updated_at" value
 * @method TvConcertgoerBands  setTvConcertgoer()     Sets the current record's "TvConcertgoer" value
 * @method TvConcertgoerBands  setTvArtistImgs()      Sets the current record's "TvArtistImgs" value
 * @method TvConcertgoerBands  setTvConcerts()        Sets the current record's "TvConcerts" collection
 * @method TvConcertgoerBands  setTvConcertsHistory() Sets the current record's "TvConcertsHistory" collection
 * @method TvConcertgoerBands  setTvConcertsShared()  Sets the current record's "TvConcertsShared" collection
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTvConcertgoerBands extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tv_concertgoer_bands');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('userid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('username', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('useremail', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('artist_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('artist_slug', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('artist_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '4',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('dateadded', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TvConcertgoer', array(
             'local' => 'userid',
             'foreign' => 'userid'));

        $this->hasOne('TvArtistImgs', array(
             'local' => 'artist_id',
             'foreign' => 'artist_id'));

        $this->hasMany('TvConcerts', array(
             'local' => 'artist_id',
             'foreign' => 'artist_id'));

        $this->hasMany('TvConcertsHistory', array(
             'local' => 'artist_id',
             'foreign' => 'artist_id'));

        $this->hasMany('TvConcertsShared', array(
             'local' => 'artist_id',
             'foreign' => 'artist_id'));
    }
}