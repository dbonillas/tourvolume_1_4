<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Bestof', 'doctrine');

/**
 * BaseBestof
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $type
 * @property integer $band_id
 * @property string $image
 * @property string $band_name
 * @property string $city
 * @property string $state
 * @property string $club
 * @property string $album_name
 * @property string $user
 * @property timestamp $created_at
 * 
 * @method integer   getId()         Returns the current record's "id" value
 * @method integer   getType()       Returns the current record's "type" value
 * @method integer   getBandId()     Returns the current record's "band_id" value
 * @method string    getImage()      Returns the current record's "image" value
 * @method string    getBandName()   Returns the current record's "band_name" value
 * @method string    getCity()       Returns the current record's "city" value
 * @method string    getState()      Returns the current record's "state" value
 * @method string    getClub()       Returns the current record's "club" value
 * @method string    getAlbumName()  Returns the current record's "album_name" value
 * @method string    getUser()       Returns the current record's "user" value
 * @method timestamp getCreatedAt()  Returns the current record's "created_at" value
 * @method Bestof    setId()         Sets the current record's "id" value
 * @method Bestof    setType()       Sets the current record's "type" value
 * @method Bestof    setBandId()     Sets the current record's "band_id" value
 * @method Bestof    setImage()      Sets the current record's "image" value
 * @method Bestof    setBandName()   Sets the current record's "band_name" value
 * @method Bestof    setCity()       Sets the current record's "city" value
 * @method Bestof    setState()      Sets the current record's "state" value
 * @method Bestof    setClub()       Sets the current record's "club" value
 * @method Bestof    setAlbumName()  Sets the current record's "album_name" value
 * @method Bestof    setUser()       Sets the current record's "user" value
 * @method Bestof    setCreatedAt()  Sets the current record's "created_at" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBestof extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bestof');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('band_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('image', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('band_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('city', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('state', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('club', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('album_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('user', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}