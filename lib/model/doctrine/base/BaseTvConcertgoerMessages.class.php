<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TvConcertgoerMessages', 'doctrine');

/**
 * BaseTvConcertgoerMessages
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $toid
 * @property string $toname
 * @property string $message
 * @property integer $fromid
 * @property string $fromname
 * @property integer $inbox
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property TvConcertgoer $TvConcertgoer
 * @property TvConcertgoer $TvConcertgoer_2
 * 
 * @method integer               getId()              Returns the current record's "id" value
 * @method integer               getToid()            Returns the current record's "toid" value
 * @method string                getToname()          Returns the current record's "toname" value
 * @method string                getMessage()         Returns the current record's "message" value
 * @method integer               getFromid()          Returns the current record's "fromid" value
 * @method string                getFromname()        Returns the current record's "fromname" value
 * @method integer               getInbox()           Returns the current record's "inbox" value
 * @method timestamp             getCreatedAt()       Returns the current record's "created_at" value
 * @method timestamp             getUpdatedAt()       Returns the current record's "updated_at" value
 * @method TvConcertgoer         getTvConcertgoer()   Returns the current record's "TvConcertgoer" value
 * @method TvConcertgoer         getTvConcertgoer2()  Returns the current record's "TvConcertgoer_2" value
 * @method TvConcertgoerMessages setId()              Sets the current record's "id" value
 * @method TvConcertgoerMessages setToid()            Sets the current record's "toid" value
 * @method TvConcertgoerMessages setToname()          Sets the current record's "toname" value
 * @method TvConcertgoerMessages setMessage()         Sets the current record's "message" value
 * @method TvConcertgoerMessages setFromid()          Sets the current record's "fromid" value
 * @method TvConcertgoerMessages setFromname()        Sets the current record's "fromname" value
 * @method TvConcertgoerMessages setInbox()           Sets the current record's "inbox" value
 * @method TvConcertgoerMessages setCreatedAt()       Sets the current record's "created_at" value
 * @method TvConcertgoerMessages setUpdatedAt()       Sets the current record's "updated_at" value
 * @method TvConcertgoerMessages setTvConcertgoer()   Sets the current record's "TvConcertgoer" value
 * @method TvConcertgoerMessages setTvConcertgoer2()  Sets the current record's "TvConcertgoer_2" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTvConcertgoerMessages extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tv_concertgoer_messages');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('toid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('toname', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('message', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fromid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('fromname', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('inbox', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TvConcertgoer', array(
             'local' => 'toid',
             'foreign' => 'userid'));

        $this->hasOne('TvConcertgoer as TvConcertgoer_2', array(
             'local' => 'fromid',
             'foreign' => 'userid'));
    }
}