<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TvCity', 'doctrine');

/**
 * BaseTvCity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $ps_id
 * @property string $city
 * @property string $state
 * @property string $state_abv
 * @property string $country
 * @property integer $counter
 * @property string $img
 * @property float $latitude
 * @property float $longitude
 * @property string $fifty_miles
 * @property Doctrine_Collection $TvConcertsShared
 * @property Doctrine_Collection $TvConcerts
 * @property Doctrine_Collection $TvConcertsHistory
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getPsId()              Returns the current record's "ps_id" value
 * @method string              getCity()              Returns the current record's "city" value
 * @method string              getState()             Returns the current record's "state" value
 * @method string              getStateAbv()          Returns the current record's "state_abv" value
 * @method string              getCountry()           Returns the current record's "country" value
 * @method integer             getCounter()           Returns the current record's "counter" value
 * @method string              getImg()               Returns the current record's "img" value
 * @method float               getLatitude()          Returns the current record's "latitude" value
 * @method float               getLongitude()         Returns the current record's "longitude" value
 * @method string              getFiftyMiles()        Returns the current record's "fifty_miles" value
 * @method Doctrine_Collection getTvConcertsShared()  Returns the current record's "TvConcertsShared" collection
 * @method Doctrine_Collection getTvConcerts()        Returns the current record's "TvConcerts" collection
 * @method Doctrine_Collection getTvConcertsHistory() Returns the current record's "TvConcertsHistory" collection
 * @method TvCity              setId()                Sets the current record's "id" value
 * @method TvCity              setPsId()              Sets the current record's "ps_id" value
 * @method TvCity              setCity()              Sets the current record's "city" value
 * @method TvCity              setState()             Sets the current record's "state" value
 * @method TvCity              setStateAbv()          Sets the current record's "state_abv" value
 * @method TvCity              setCountry()           Sets the current record's "country" value
 * @method TvCity              setCounter()           Sets the current record's "counter" value
 * @method TvCity              setImg()               Sets the current record's "img" value
 * @method TvCity              setLatitude()          Sets the current record's "latitude" value
 * @method TvCity              setLongitude()         Sets the current record's "longitude" value
 * @method TvCity              setFiftyMiles()        Sets the current record's "fifty_miles" value
 * @method TvCity              setTvConcertsShared()  Sets the current record's "TvConcertsShared" collection
 * @method TvCity              setTvConcerts()        Sets the current record's "TvConcerts" collection
 * @method TvCity              setTvConcertsHistory() Sets the current record's "TvConcertsHistory" collection
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTvCity extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tv_city');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('ps_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('city', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('state', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('state_abv', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('country', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('counter', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('img', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('latitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('longitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fifty_miles', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TvConcertsShared', array(
             'local' => 'id',
             'foreign' => 'city_id'));

        $this->hasMany('TvConcerts', array(
             'local' => 'id',
             'foreign' => 'city_id'));

        $this->hasMany('TvConcertsHistory', array(
             'local' => 'id',
             'foreign' => 'city_id'));
    }
}