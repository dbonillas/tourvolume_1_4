<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Liveusermessage', 'doctrine');

/**
 * BaseLiveusermessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $to_id
 * @property string $to_name
 * @property string $message
 * @property integer $from_id
 * @property string $from_name
 * @property integer $inbox
 * @property timestamp $sent
 * 
 * @method integer         getId()        Returns the current record's "id" value
 * @method integer         getToId()      Returns the current record's "to_id" value
 * @method string          getToName()    Returns the current record's "to_name" value
 * @method string          getMessage()   Returns the current record's "message" value
 * @method integer         getFromId()    Returns the current record's "from_id" value
 * @method string          getFromName()  Returns the current record's "from_name" value
 * @method integer         getInbox()     Returns the current record's "inbox" value
 * @method timestamp       getSent()      Returns the current record's "sent" value
 * @method Liveusermessage setId()        Sets the current record's "id" value
 * @method Liveusermessage setToId()      Sets the current record's "to_id" value
 * @method Liveusermessage setToName()    Sets the current record's "to_name" value
 * @method Liveusermessage setMessage()   Sets the current record's "message" value
 * @method Liveusermessage setFromId()    Sets the current record's "from_id" value
 * @method Liveusermessage setFromName()  Sets the current record's "from_name" value
 * @method Liveusermessage setInbox()     Sets the current record's "inbox" value
 * @method Liveusermessage setSent()      Sets the current record's "sent" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLiveusermessage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('liveusermessage');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('to_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('to_name', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('message', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('from_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('from_name', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('inbox', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('sent', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}