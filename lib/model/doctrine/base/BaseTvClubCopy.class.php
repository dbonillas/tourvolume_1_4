<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TvClubCopy', 'doctrine');

/**
 * BaseTvClubCopy
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $city
 * @property string $state_abv
 * @property string $street
 * @property string $phone
 * @property string $fax
 * @property string $website
 * @property string $email
 * @property integer $capacity
 * @property integer $counter
 * @property float $latitude
 * @property float $longitude
 * @property string $ticket
 * @property timestamp $created_at
 * 
 * @method integer    getId()         Returns the current record's "id" value
 * @method string     getName()       Returns the current record's "name" value
 * @method string     getCity()       Returns the current record's "city" value
 * @method string     getStateAbv()   Returns the current record's "state_abv" value
 * @method string     getStreet()     Returns the current record's "street" value
 * @method string     getPhone()      Returns the current record's "phone" value
 * @method string     getFax()        Returns the current record's "fax" value
 * @method string     getWebsite()    Returns the current record's "website" value
 * @method string     getEmail()      Returns the current record's "email" value
 * @method integer    getCapacity()   Returns the current record's "capacity" value
 * @method integer    getCounter()    Returns the current record's "counter" value
 * @method float      getLatitude()   Returns the current record's "latitude" value
 * @method float      getLongitude()  Returns the current record's "longitude" value
 * @method string     getTicket()     Returns the current record's "ticket" value
 * @method timestamp  getCreatedAt()  Returns the current record's "created_at" value
 * @method TvClubCopy setId()         Sets the current record's "id" value
 * @method TvClubCopy setName()       Sets the current record's "name" value
 * @method TvClubCopy setCity()       Sets the current record's "city" value
 * @method TvClubCopy setStateAbv()   Sets the current record's "state_abv" value
 * @method TvClubCopy setStreet()     Sets the current record's "street" value
 * @method TvClubCopy setPhone()      Sets the current record's "phone" value
 * @method TvClubCopy setFax()        Sets the current record's "fax" value
 * @method TvClubCopy setWebsite()    Sets the current record's "website" value
 * @method TvClubCopy setEmail()      Sets the current record's "email" value
 * @method TvClubCopy setCapacity()   Sets the current record's "capacity" value
 * @method TvClubCopy setCounter()    Sets the current record's "counter" value
 * @method TvClubCopy setLatitude()   Sets the current record's "latitude" value
 * @method TvClubCopy setLongitude()  Sets the current record's "longitude" value
 * @method TvClubCopy setTicket()     Sets the current record's "ticket" value
 * @method TvClubCopy setCreatedAt()  Sets the current record's "created_at" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTvClubCopy extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tv_clubCopy');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('state_abv', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('street', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('phone', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('fax', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('website', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('capacity', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('counter', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('latitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('longitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('ticket', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}