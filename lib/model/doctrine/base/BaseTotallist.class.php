<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Totallist', 'doctrine');

/**
 * BaseTotallist
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $email
 * @property string $first_name
 * @property string $last_name
 * @property string $city
 * @property string $state
 * @property integer $age
 * @property string $favorite
 * @property string $mobile
 * @property integer $contestid
 * 
 * @method integer   getId()         Returns the current record's "id" value
 * @method string    getEmail()      Returns the current record's "email" value
 * @method string    getFirstName()  Returns the current record's "first_name" value
 * @method string    getLastName()   Returns the current record's "last_name" value
 * @method string    getCity()       Returns the current record's "city" value
 * @method string    getState()      Returns the current record's "state" value
 * @method integer   getAge()        Returns the current record's "age" value
 * @method string    getFavorite()   Returns the current record's "favorite" value
 * @method string    getMobile()     Returns the current record's "mobile" value
 * @method integer   getContestid()  Returns the current record's "contestid" value
 * @method Totallist setId()         Sets the current record's "id" value
 * @method Totallist setEmail()      Sets the current record's "email" value
 * @method Totallist setFirstName()  Sets the current record's "first_name" value
 * @method Totallist setLastName()   Sets the current record's "last_name" value
 * @method Totallist setCity()       Sets the current record's "city" value
 * @method Totallist setState()      Sets the current record's "state" value
 * @method Totallist setAge()        Sets the current record's "age" value
 * @method Totallist setFavorite()   Sets the current record's "favorite" value
 * @method Totallist setMobile()     Sets the current record's "mobile" value
 * @method Totallist setContestid()  Sets the current record's "contestid" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTotallist extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('totallist');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('first_name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('last_name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('city', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('state', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('age', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('favorite', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('mobile', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('contestid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}