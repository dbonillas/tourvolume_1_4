<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Clubaccess', 'doctrine');

/**
 * BaseClubaccess
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $club_id
 * @property string $name
 * @property string $location
 * @property string $mailing
 * @property string $phone
 * @property string $fax
 * @property string $email
 * @property string $website
 * @property string $venue_type
 * @property string $stage_type
 * @property string $format
 * @property string $capacity
 * @property string $ages
 * @property string $ticketagency
 * @property string $rent
 * @property string $market_size
 * @property string $promotion
 * @property string $ownerbooking
 * @property string $owner
 * @property string $publicity
 * @property string $owner2
 * @property string $prod_manager
 * @property string $general_manager
 * @property string $promoter
 * @property string $talent_buyer
 * 
 * @method integer    getId()              Returns the current record's "id" value
 * @method integer    getClubId()          Returns the current record's "club_id" value
 * @method string     getName()            Returns the current record's "name" value
 * @method string     getLocation()        Returns the current record's "location" value
 * @method string     getMailing()         Returns the current record's "mailing" value
 * @method string     getPhone()           Returns the current record's "phone" value
 * @method string     getFax()             Returns the current record's "fax" value
 * @method string     getEmail()           Returns the current record's "email" value
 * @method string     getWebsite()         Returns the current record's "website" value
 * @method string     getVenueType()       Returns the current record's "venue_type" value
 * @method string     getStageType()       Returns the current record's "stage_type" value
 * @method string     getFormat()          Returns the current record's "format" value
 * @method string     getCapacity()        Returns the current record's "capacity" value
 * @method string     getAges()            Returns the current record's "ages" value
 * @method string     getTicketagency()    Returns the current record's "ticketagency" value
 * @method string     getRent()            Returns the current record's "rent" value
 * @method string     getMarketSize()      Returns the current record's "market_size" value
 * @method string     getPromotion()       Returns the current record's "promotion" value
 * @method string     getOwnerbooking()    Returns the current record's "ownerbooking" value
 * @method string     getOwner()           Returns the current record's "owner" value
 * @method string     getPublicity()       Returns the current record's "publicity" value
 * @method string     getOwner2()          Returns the current record's "owner2" value
 * @method string     getProdManager()     Returns the current record's "prod_manager" value
 * @method string     getGeneralManager()  Returns the current record's "general_manager" value
 * @method string     getPromoter()        Returns the current record's "promoter" value
 * @method string     getTalentBuyer()     Returns the current record's "talent_buyer" value
 * @method Clubaccess setId()              Sets the current record's "id" value
 * @method Clubaccess setClubId()          Sets the current record's "club_id" value
 * @method Clubaccess setName()            Sets the current record's "name" value
 * @method Clubaccess setLocation()        Sets the current record's "location" value
 * @method Clubaccess setMailing()         Sets the current record's "mailing" value
 * @method Clubaccess setPhone()           Sets the current record's "phone" value
 * @method Clubaccess setFax()             Sets the current record's "fax" value
 * @method Clubaccess setEmail()           Sets the current record's "email" value
 * @method Clubaccess setWebsite()         Sets the current record's "website" value
 * @method Clubaccess setVenueType()       Sets the current record's "venue_type" value
 * @method Clubaccess setStageType()       Sets the current record's "stage_type" value
 * @method Clubaccess setFormat()          Sets the current record's "format" value
 * @method Clubaccess setCapacity()        Sets the current record's "capacity" value
 * @method Clubaccess setAges()            Sets the current record's "ages" value
 * @method Clubaccess setTicketagency()    Sets the current record's "ticketagency" value
 * @method Clubaccess setRent()            Sets the current record's "rent" value
 * @method Clubaccess setMarketSize()      Sets the current record's "market_size" value
 * @method Clubaccess setPromotion()       Sets the current record's "promotion" value
 * @method Clubaccess setOwnerbooking()    Sets the current record's "ownerbooking" value
 * @method Clubaccess setOwner()           Sets the current record's "owner" value
 * @method Clubaccess setPublicity()       Sets the current record's "publicity" value
 * @method Clubaccess setOwner2()          Sets the current record's "owner2" value
 * @method Clubaccess setProdManager()     Sets the current record's "prod_manager" value
 * @method Clubaccess setGeneralManager()  Sets the current record's "general_manager" value
 * @method Clubaccess setPromoter()        Sets the current record's "promoter" value
 * @method Clubaccess setTalentBuyer()     Sets the current record's "talent_buyer" value
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClubaccess extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('clubaccess');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('club_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('mailing', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('phone', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('fax', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('email', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('website', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('venue_type', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('stage_type', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('format', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('capacity', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('ages', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('ticketagency', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('rent', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('market_size', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('promotion', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('ownerbooking', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('owner', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('publicity', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('owner2', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('prod_manager', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('general_manager', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('promoter', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('talent_buyer', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}