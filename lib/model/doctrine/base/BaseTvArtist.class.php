<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TvArtist', 'doctrine');

/**
 * BaseTvArtist
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $tv_id
 * @property string $name
 * @property string $slug
 * @property string $genre
 * @property string $bio
 * @property string $image
 * @property string $mp3
 * @property string $web
 * @property string $itunes_url
 * @property string $label
 * @property integer $counter
 * @property integer $has_mp3
 * @property integer $has_img
 * @property timestamp $created_at
 * @property Doctrine_Collection $TvAgentRoster
 * @property Doctrine_Collection $TvArtistImgs
 * @property Doctrine_Collection $TvArtistMp3
 * @property Doctrine_Collection $TvArtistRelated
 * @property Doctrine_Collection $TvArtistVideos
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getTvId()            Returns the current record's "tv_id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getSlug()            Returns the current record's "slug" value
 * @method string              getGenre()           Returns the current record's "genre" value
 * @method string              getBio()             Returns the current record's "bio" value
 * @method string              getImage()           Returns the current record's "image" value
 * @method string              getMp3()             Returns the current record's "mp3" value
 * @method string              getWeb()             Returns the current record's "web" value
 * @method string              getItunesUrl()       Returns the current record's "itunes_url" value
 * @method string              getLabel()           Returns the current record's "label" value
 * @method integer             getCounter()         Returns the current record's "counter" value
 * @method integer             getHasMp3()          Returns the current record's "has_mp3" value
 * @method integer             getHasImg()          Returns the current record's "has_img" value
 * @method timestamp           getCreatedAt()       Returns the current record's "created_at" value
 * @method Doctrine_Collection getTvAgentRoster()   Returns the current record's "TvAgentRoster" collection
 * @method Doctrine_Collection getTvArtistImgs()    Returns the current record's "TvArtistImgs" collection
 * @method Doctrine_Collection getTvArtistMp3()     Returns the current record's "TvArtistMp3" collection
 * @method Doctrine_Collection getTvArtistRelated() Returns the current record's "TvArtistRelated" collection
 * @method Doctrine_Collection getTvArtistVideos()  Returns the current record's "TvArtistVideos" collection
 * @method TvArtist            setId()              Sets the current record's "id" value
 * @method TvArtist            setTvId()            Sets the current record's "tv_id" value
 * @method TvArtist            setName()            Sets the current record's "name" value
 * @method TvArtist            setSlug()            Sets the current record's "slug" value
 * @method TvArtist            setGenre()           Sets the current record's "genre" value
 * @method TvArtist            setBio()             Sets the current record's "bio" value
 * @method TvArtist            setImage()           Sets the current record's "image" value
 * @method TvArtist            setMp3()             Sets the current record's "mp3" value
 * @method TvArtist            setWeb()             Sets the current record's "web" value
 * @method TvArtist            setItunesUrl()       Sets the current record's "itunes_url" value
 * @method TvArtist            setLabel()           Sets the current record's "label" value
 * @method TvArtist            setCounter()         Sets the current record's "counter" value
 * @method TvArtist            setHasMp3()          Sets the current record's "has_mp3" value
 * @method TvArtist            setHasImg()          Sets the current record's "has_img" value
 * @method TvArtist            setCreatedAt()       Sets the current record's "created_at" value
 * @method TvArtist            setTvAgentRoster()   Sets the current record's "TvAgentRoster" collection
 * @method TvArtist            setTvArtistImgs()    Sets the current record's "TvArtistImgs" collection
 * @method TvArtist            setTvArtistMp3()     Sets the current record's "TvArtistMp3" collection
 * @method TvArtist            setTvArtistRelated() Sets the current record's "TvArtistRelated" collection
 * @method TvArtist            setTvArtistVideos()  Sets the current record's "TvArtistVideos" collection
 * 
 * @package    tourvolume
 * @subpackage model
 * @author     Dave Bonillas
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTvArtist extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tv_artist');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('tv_id', 'string', 35, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 35,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('genre', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('bio', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('mp3', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('web', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('itunes_url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('label', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('counter', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '150',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('has_mp3', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('has_img', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TvAgentRoster', array(
             'local' => 'id',
             'foreign' => 'artist_id'));

        $this->hasMany('TvArtistImgs', array(
             'local' => 'id',
             'foreign' => 'artist_id'));

        $this->hasMany('TvArtistMp3', array(
             'local' => 'id',
             'foreign' => 'artist_id'));

        $this->hasMany('TvArtistRelated', array(
             'local' => 'id',
             'foreign' => 'artist_id'));

        $this->hasMany('TvArtistVideos', array(
             'local' => 'id',
             'foreign' => 'artist_id'));
    }
}